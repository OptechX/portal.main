name: Docker Image CI

on:
  schedule:
    - cron: '0 11 * * 3'
  push:
    branches: [ "builder" ]
  pull_request:
    branches: [ "builder" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  dh-deploy:
    
    needs: [ "build" ]

    runs-on: ubuntu-latest

    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{ secrets.github_token }}
    - uses: actions/checkout@v3
    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Deploy to Dockerhub
      run: |
        echo "Build number: ${{ steps.buildnumber.outputs.build_number }}"
        docker build --rm --no-cache --tag repasscloud/optechx.portal .
        docker push repasscloud/optechx.portal
  
  server-deploy:
    needs: [ "build", "dh-deploy" ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup SSH
      env:
        gpg_pass: ${{ secrets.GPGKEY }}
      run: |
        echo -e "$gpg_pass" | gpg --batch --passphrase-fd 0 --decrypt-files ./secrets/*.gpg
        chmod 700 ./secrets
        chmod 400 ./secrets/user_host_rsa
    - name: Auto-Deploy
      env:
        ssh_user: ${{ secrets.SSH_USR }}
        ssh_url: ${{ secrets.SSH_URL }}
      run: |
        ssh -o "StrictHostKeyChecking=no" -i ./secrets/user_host_rsa "$ssh_user@$ssh_url" 'docker compose down; docker network prune --force; docker network create web; docker network create --internal caddy_internal; docker rmi $(docker images -aq); docker compose up -d'

  auto-pr:
    needs: [ "build" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: create pull request
        run: gh pr create --base staging --head builder --title 'Auto PR builder into staging' --body 'Automatically created by gh-actions.' --label auto-pr
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
  
  auto-merge:
    needs: [ "auto-pr" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: merge pull request
        run: gh pr merge --squash
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
